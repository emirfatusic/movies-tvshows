{"ast":null,"code":"import _slicedToArray from\"C:/Users/Emir/Desktop/movies and tv shows app/movies-tvshows-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useRef,useState}from'react';import{useLocation,useHistory}from'react-router-dom';import{LocationURLContext,MovieContext,showSearchBarContext}from'../Context';import axios from'axios';import ReactPlayer from'react-player';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MovieDetails(){var url_poster=\"https://image.tmdb.org/t/p/original\";var location=useLocation();var _useContext=useContext(MovieContext),globalMovieList=_useContext.globalMovieList;var _useContext2=useContext(LocationURLContext),setLocationURL=_useContext2.setLocationURL;var _useContext3=useContext(showSearchBarContext),setShowSearchBarState=_useContext3.setShowSearchBarState;setShowSearchBarState(\"none\");setLocationURL(\"movie\");var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),videoURL=_useState2[0],setVideoURL=_useState2[1];var movieToDisplay;var youTubeKey;var hasTrailer=useRef(false);globalMovieList.forEach(function(element){if(\"/movies/\".concat(element.title)===location.pathname){movieToDisplay=element;}});var urlRequestTrailerInfo=\"https://api.themoviedb.org/3/movie/\".concat(movieToDisplay.id,\"/videos?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US\");axios.get(urlRequestTrailerInfo).then(function(response){var trailerInfo=response.data.results;if(trailerInfo.length===0){hasTrailer.current=false;}else{hasTrailer.current=true;youTubeKey=trailerInfo[0].key;setVideoURL(\"https://www.youtube.com/watch?v=\"+youTubeKey);}});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"movieDetailedView\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"button2 backButton\",onClick:useHistory().goBack,children:\" < Back\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"detailedViewPoster\",children:!hasTrailer.current&&/*#__PURE__*/_jsx(\"img\",{src:url_poster+movieToDisplay.poster_path,alt:movieToDisplay.title})}),/*#__PURE__*/_jsx(\"div\",{className:\"detailedViewTrailer\",children:hasTrailer.current&&/*#__PURE__*/_jsx(ReactPlayer,{url:videoURL,controls:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"detailedViewMovieTitle\",children:/*#__PURE__*/_jsx(\"p\",{children:movieToDisplay.title})}),/*#__PURE__*/_jsx(\"div\",{className:\"movieDescription\",children:/*#__PURE__*/_jsx(\"p\",{children:movieToDisplay.overview})})]})});}","map":{"version":3,"sources":["C:/Users/Emir/Desktop/movies and tv shows app/movies-tvshows-db/src/Pages/MovieDetails.js"],"names":["React","useContext","useRef","useState","useLocation","useHistory","LocationURLContext","MovieContext","showSearchBarContext","axios","ReactPlayer","MovieDetails","url_poster","location","globalMovieList","setLocationURL","setShowSearchBarState","videoURL","setVideoURL","movieToDisplay","youTubeKey","hasTrailer","forEach","element","title","pathname","urlRequestTrailerInfo","id","get","then","response","trailerInfo","data","results","length","current","key","goBack","poster_path","overview"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,QAApC,KAAoD,OAApD,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,kBAAxC,CACA,OAASC,kBAAT,CAA6BC,YAA7B,CAA2CC,oBAA3C,KAAuE,YAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,C,6IAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CAEnC,GAAMC,CAAAA,UAAU,CAAG,qCAAnB,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,gBAA0BH,UAAU,CAACM,YAAD,CAApC,CAAOO,eAAP,aAAOA,eAAP,CACA,iBAAyBb,UAAU,CAACK,kBAAD,CAAnC,CAAOS,cAAP,cAAOA,cAAP,CACA,iBAAgCd,UAAU,CAACO,oBAAD,CAA1C,CAAOQ,qBAAP,cAAOA,qBAAP,CACAA,qBAAqB,CAAC,MAAD,CAArB,CAEAD,cAAc,CAAC,OAAD,CAAd,CACA,cAAgCZ,QAAQ,CAAC,EAAD,CAAxC,wCAAOc,QAAP,eAAiBC,WAAjB,eAGA,GAAIC,CAAAA,cAAJ,CACA,GAAIC,CAAAA,UAAJ,CACA,GAAIC,CAAAA,UAAU,CAAGnB,MAAM,CAAC,KAAD,CAAvB,CAEAY,eAAe,CAACQ,OAAhB,CAAwB,SAAAC,OAAO,CAAI,CAC/B,GAAG,kBAAWA,OAAO,CAACC,KAAnB,IAA+BX,QAAQ,CAACY,QAA3C,CAAoD,CAChDN,cAAc,CAAGI,OAAjB,CACH,CACJ,CAJD,EAMI,GAAIG,CAAAA,qBAAqB,8CAAyCP,cAAc,CAACQ,EAAxD,mEAAzB,CAEAlB,KAAK,CAACmB,GAAN,CAAUF,qBAAV,EAAiCG,IAAjC,CAAsC,SAACC,QAAD,CAAY,CAC9C,GAAMC,CAAAA,WAAW,CAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAlC,CACA,GAAIF,WAAW,CAACG,MAAZ,GAAuB,CAA3B,CAA6B,CACzBb,UAAU,CAACc,OAAX,CAAqB,KAArB,CACH,CAFD,IAGK,CACDd,UAAU,CAACc,OAAX,CAAqB,IAArB,CACAf,UAAU,CAAGW,WAAW,CAAC,CAAD,CAAX,CAAeK,GAA5B,CACAlB,WAAW,CAAC,mCAAqCE,UAAtC,CAAX,CACH,CACJ,CAVD,EAYJ,mBACI,sCACA,aAAK,SAAS,CAAG,mBAAjB,wBACA,kCACI,eAAQ,SAAS,CAAG,oBAApB,CAAyC,OAAO,CAAGf,UAAU,GAAGgC,MAAhE,qBADJ,EADA,cAIQ,YAAK,SAAS,CAAG,oBAAjB,UACM,CAAChB,UAAU,CAACc,OAAZ,eACF,YAAK,GAAG,CAAIvB,UAAU,CAAGO,cAAc,CAACmB,WAAxC,CAAqD,GAAG,CAAInB,cAAc,CAACK,KAA3E,EAFJ,EAJR,cAQQ,YAAK,SAAS,CAAG,qBAAjB,UACEH,UAAU,CAACc,OAAX,eACF,KAAC,WAAD,EAAa,GAAG,CAAIlB,QAApB,CAA8B,QAAQ,CAAI,IAA1C,EAFA,EARR,cAYQ,YAAK,SAAS,CAAG,wBAAjB,uBACI,mBAAIE,cAAc,CAACK,KAAnB,EADJ,EAZR,cAeQ,YAAK,SAAS,CAAG,kBAAjB,uBACI,mBAAIL,cAAc,CAACoB,QAAnB,EADJ,EAfR,GADA,EADJ,CAuBH","sourcesContent":["import React, { useContext, useRef, useState } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { LocationURLContext, MovieContext, showSearchBarContext } from '../Context';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport default function MovieDetails() {\r\n    \r\n    const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n    const location = useLocation();\r\n    const {globalMovieList} = useContext(MovieContext);\r\n    const {setLocationURL} = useContext(LocationURLContext);\r\n    const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n    setShowSearchBarState(\"none\");\r\n\r\n    setLocationURL(\"movie\");\r\n    const [videoURL, setVideoURL] = useState(\"\");\r\n\r\n    \r\n    let movieToDisplay;\r\n    let youTubeKey;\r\n    var hasTrailer = useRef(false);\r\n\r\n    globalMovieList.forEach(element => {\r\n        if(`/movies/${element.title}` === location.pathname){\r\n            movieToDisplay = element;\r\n        }\r\n    });\r\n    \r\n        let urlRequestTrailerInfo = `https://api.themoviedb.org/3/movie/${movieToDisplay.id}/videos?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US`;\r\n        \r\n        axios.get(urlRequestTrailerInfo).then((response)=>{\r\n            const trailerInfo = response.data.results;\r\n            if (trailerInfo.length === 0){\r\n                hasTrailer.current = false;\r\n            }\r\n            else {\r\n                hasTrailer.current = true;\r\n                youTubeKey = trailerInfo[0].key;\r\n                setVideoURL(\"https://www.youtube.com/watch?v=\" + youTubeKey);\r\n            }\r\n        })\r\n\r\n    return (\r\n        <>   \r\n        <div className = \"movieDetailedView\">\r\n        <div>\r\n            <button className = \"button2 backButton\" onClick ={useHistory().goBack}> &#60; Back</button>\r\n        </div> \r\n                <div className = \"detailedViewPoster\">\r\n                    { !hasTrailer.current &&\r\n                    <img src = {url_poster + movieToDisplay.poster_path} alt = {movieToDisplay.title}/>}\r\n                </div>\r\n                <div className = \"detailedViewTrailer\">\r\n                { hasTrailer.current && \r\n                <ReactPlayer url = {videoURL} controls = {true}/>}\r\n                </div>\r\n                <div className = \"detailedViewMovieTitle\">\r\n                    <p>{movieToDisplay.title}</p> \r\n                </div>\r\n                <div className = \"movieDescription\">\r\n                    <p>{movieToDisplay.overview}</p>\r\n                </div>   \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}