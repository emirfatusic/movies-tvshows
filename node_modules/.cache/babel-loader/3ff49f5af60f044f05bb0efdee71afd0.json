{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emir\\\\Desktop\\\\movies and tv shows app\\\\movies-tvshows-db\\\\src\\\\Pages\\\\MovieDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { LocationURLContext, MovieContext, showSearchBarContext } from '../Context';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieDetails() {\n  _s();\n\n  const url_poster = \"https://image.tmdb.org/t/p/original\";\n  const location = useLocation();\n  const {\n    globalMovieList\n  } = useContext(MovieContext);\n  const {\n    setLocationURL\n  } = useContext(LocationURLContext);\n  const {\n    setShowSearchBarState\n  } = useContext(showSearchBarContext);\n  setShowSearchBarState(\"none\");\n  setLocationURL(\"movie\");\n  const [videoURL, setVideoURL] = useState(\"\");\n  let movieToDisplay;\n  let youTubeKey;\n  var hasTrailer = useRef(false);\n  globalMovieList.forEach(element => {\n    if (`/movies/${element.title}` === location.pathname) {\n      movieToDisplay = element;\n    }\n  });\n  let urlRequestTrailerInfo = `https://api.themoviedb.org/3/movie/${movieToDisplay.id}/videos?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US`;\n  axios.get(urlRequestTrailerInfo).then(response => {\n    const trailerInfo = response.data.results;\n\n    if (trailerInfo.length === 0) {\n      hasTrailer.current = false;\n    } else {\n      hasTrailer.current = true;\n      youTubeKey = trailerInfo[0].key;\n      setVideoURL(\"https://www.youtube.com/watch?v=\" + youTubeKey);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDetailedView\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button2 backButton\",\n          onClick: useHistory().goBack,\n          children: \" < Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailedViewPoster\",\n        children: !hasTrailer.current && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url_poster + movieToDisplay.poster_path,\n          alt: movieToDisplay.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailedViewTrailer\",\n        children: hasTrailer.current && /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: videoURL,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailedViewMovieTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieToDisplay.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDescription\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movieToDisplay.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MovieDetails, \"2JiixXztR14iOkUcIJdwof8EEwk=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["C:/Users/Emir/Desktop/movies and tv shows app/movies-tvshows-db/src/Pages/MovieDetails.js"],"names":["React","useContext","useRef","useState","useLocation","useHistory","LocationURLContext","MovieContext","showSearchBarContext","axios","ReactPlayer","MovieDetails","url_poster","location","globalMovieList","setLocationURL","setShowSearchBarState","videoURL","setVideoURL","movieToDisplay","youTubeKey","hasTrailer","forEach","element","title","pathname","urlRequestTrailerInfo","id","get","then","response","trailerInfo","data","results","length","current","key","goBack","poster_path","overview"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { LocationURLContext, MovieContext, showSearchBarContext } from '../Context';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport default function MovieDetails() {\r\n    \r\n    const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n    const location = useLocation();\r\n    const {globalMovieList} = useContext(MovieContext);\r\n    const {setLocationURL} = useContext(LocationURLContext);\r\n    const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n    setShowSearchBarState(\"none\");\r\n\r\n    setLocationURL(\"movie\");\r\n    const [videoURL, setVideoURL] = useState(\"\");\r\n\r\n    \r\n    let movieToDisplay;\r\n    let youTubeKey;\r\n    var hasTrailer = useRef(false);\r\n\r\n    globalMovieList.forEach(element => {\r\n        if(`/movies/${element.title}` === location.pathname){\r\n            movieToDisplay = element;\r\n        }\r\n    });\r\n    \r\n        let urlRequestTrailerInfo = `https://api.themoviedb.org/3/movie/${movieToDisplay.id}/videos?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US`;\r\n        \r\n        axios.get(urlRequestTrailerInfo).then((response)=>{\r\n            const trailerInfo = response.data.results;\r\n            if (trailerInfo.length === 0){\r\n                hasTrailer.current = false;\r\n            }\r\n            else {\r\n                hasTrailer.current = true;\r\n                youTubeKey = trailerInfo[0].key;\r\n                setVideoURL(\"https://www.youtube.com/watch?v=\" + youTubeKey);\r\n            }\r\n        })\r\n\r\n    return (\r\n        <>   \r\n        <div className = \"movieDetailedView\">\r\n        <div>\r\n            <button className = \"button2 backButton\" onClick ={useHistory().goBack}> &#60; Back</button>\r\n        </div> \r\n                <div className = \"detailedViewPoster\">\r\n                    { !hasTrailer.current &&\r\n                    <img src = {url_poster + movieToDisplay.poster_path} alt = {movieToDisplay.title}/>}\r\n                </div>\r\n                <div className = \"detailedViewTrailer\">\r\n                { hasTrailer.current && \r\n                <ReactPlayer url = {videoURL} controls = {true}/>}\r\n                </div>\r\n                <div className = \"detailedViewMovieTitle\">\r\n                    <p>{movieToDisplay.title}</p> \r\n                </div>\r\n                <div className = \"movieDescription\">\r\n                    <p>{movieToDisplay.overview}</p>\r\n                </div>   \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}