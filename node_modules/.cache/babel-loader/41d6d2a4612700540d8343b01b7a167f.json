{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emir\\\\Desktop\\\\movies and tv shows app\\\\movies-tvshows-db\\\\src\\\\Pages\\\\TV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TVContext, LocationURLContext, showSearchBarContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TV() {\n  _s();\n\n  const url_poster = \"https://image.tmdb.org/t/p/original\";\n  var [TVList, setTVListState] = useState([]);\n  const {\n    globalTVList\n  } = useContext(TVContext);\n  const {\n    setLocationURL\n  } = useContext(LocationURLContext);\n  const {\n    setShowSearchBarState\n  } = useContext(showSearchBarContext);\n  setShowSearchBarState(\"\");\n  setLocationURL(\"tv\");\n  useEffect(() => {\n    setTVListState(globalTVList);\n  }, [globalTVList]);\n  TVList.splice(10);\n  const mapMoviesToPage = TVList.map(movie => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleMovieContainer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `TV/${movie.name}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moviePoster\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url_poster + movie.poster_path,\n            alt: movie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieTitle\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieContainer\",\n    children: mapMoviesToPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TV, \"h8knNlORdMhBRPLh8HRaMK14vIQ=\");\n\n_c = TV;\n\nvar _c;\n\n$RefreshReg$(_c, \"TV\");","map":{"version":3,"sources":["C:/Users/Emir/Desktop/movies and tv shows app/movies-tvshows-db/src/Pages/TV.js"],"names":["React","useState","useEffect","useContext","Link","TVContext","LocationURLContext","showSearchBarContext","TV","url_poster","TVList","setTVListState","globalTVList","setLocationURL","setShowSearchBarState","splice","mapMoviesToPage","map","movie","pathname","name","poster_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,kBAApB,EAAwCC,oBAAxC,QAAoE,YAApE;;;AAEA,eAAe,SAASC,EAAT,GAAc;AAAA;;AAC3B,QAAMC,UAAU,GAAG,qCAAnB;AAEA,MAAG,CAACC,MAAD,EAASC,cAAT,IAA2BV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAK;AAACW,IAAAA;AAAD,MAAiBT,UAAU,CAACE,SAAD,CAAhC;AACA,QAAK;AAACQ,IAAAA;AAAD,MAAmBV,UAAU,CAACG,kBAAD,CAAlC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAA0BX,UAAU,CAACI,oBAAD,CAA1C;AACAO,EAAAA,qBAAqB,CAAC,EAAD,CAArB;AAEAD,EAAAA,cAAc,CAAC,IAAD,CAAd;AAEAX,EAAAA,SAAS,CAAE,MAAM;AACbS,IAAAA,cAAc,CAACC,YAAD,CAAd;AACC,GAFI,EAEF,CAACA,YAAD,CAFE,CAAT;AAIAF,EAAAA,MAAM,CAACK,MAAP,CAAc,EAAd;AAEF,QAAMC,eAAe,GAAGN,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACtC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,sBAAjB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAI;AAACC,UAAAA,QAAQ,EAAG,MAAKD,KAAK,CAACE,IAAK;AAA5B,SAAZ;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG,aAAjB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAIX,UAAU,GAAGS,KAAK,CAACG,WAA/B;AAA4C,YAAA,GAAG,EAAIH,KAAK,CAACE;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAG,YAAjB;AAAA,iCACE;AAAA,sBAAIF,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADsB,CAAxB;AAaE,sBACE;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA,cACIJ;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnCuBR,E;;KAAAA,E","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TVContext, LocationURLContext, showSearchBarContext } from '../Context';\r\n\r\nexport default function TV() { \r\n  const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n  \r\n  var[TVList, setTVListState] = useState([]);\r\n  const{globalTVList} = useContext(TVContext);\r\n  const{setLocationURL} = useContext(LocationURLContext);\r\n  const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n  setShowSearchBarState(\"\");\r\n\r\n  setLocationURL(\"tv\");\r\n  \r\n  useEffect( () => {\r\n      setTVListState(globalTVList);\r\n      }, [globalTVList])\r\n  \r\n  TVList.splice(10);\r\n\r\nconst mapMoviesToPage = TVList.map(movie => \r\n  <> \r\n    <div className = \"singleMovieContainer\">   \r\n      <Link to = {{pathname: `TV/${movie.name}`}}>\r\n        <div className = \"moviePoster\">  \r\n          <img src = {url_poster + movie.poster_path} alt = {movie.name} />\r\n        </div>\r\n        <div className = \"movieTitle\">\r\n          <p>{movie.name}</p> \r\n        </div> \r\n      </Link>\r\n    </div>  \r\n  </>)\r\n  return (\r\n    <div className = \"movieContainer\">\r\n      { mapMoviesToPage }\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}