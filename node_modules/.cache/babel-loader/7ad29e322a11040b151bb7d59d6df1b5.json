{"ast":null,"code":"import _slicedToArray from\"C:/Users/Emir/Desktop/movies and tv shows app/movies-tvshows-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import{Link}from'react-router-dom';import{MovieContext,LocationURLContext,showSearchBarContext}from'../Context';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Movies(){var url_poster=\"https://image.tmdb.org/t/p/original\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),moviesList=_useState2[0],setMoviesListState=_useState2[1];var _useContext=useContext(MovieContext),globalMovieList=_useContext.globalMovieList;var _useContext2=useContext(LocationURLContext),setLocationURL=_useContext2.setLocationURL;var _useContext3=useContext(showSearchBarContext),setShowSearchBarState=_useContext3.setShowSearchBarState;setShowSearchBarState(\"\");setLocationURL(\"movie\");useEffect(function(){setMoviesListState(globalMovieList);},[globalMovieList]);moviesList.splice(10);var mapMoviesToPage=moviesList.map(function(movie){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"singleMovieContainer\",children:/*#__PURE__*/_jsxs(Link,{to:{pathname:\"movies/\".concat(movie.title)},children:[/*#__PURE__*/_jsx(\"div\",{className:\"moviePoster\",children:/*#__PURE__*/_jsx(\"img\",{src:url_poster+movie.poster_path,alt:movie.title})}),/*#__PURE__*/_jsx(\"div\",{className:\"movieTitle\",children:/*#__PURE__*/_jsx(\"p\",{children:movie.title})})]})})});});return/*#__PURE__*/_jsx(\"div\",{className:\"movieContainer\",children:mapMoviesToPage});}","map":{"version":3,"sources":["C:/Users/Emir/Desktop/movies and tv shows app/movies-tvshows-db/src/Pages/Movies.js"],"names":["React","useState","useEffect","useContext","Link","MovieContext","LocationURLContext","showSearchBarContext","Movies","url_poster","moviesList","setMoviesListState","globalMovieList","setLocationURL","setShowSearchBarState","splice","mapMoviesToPage","map","movie","pathname","title","poster_path"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,YAAT,CAAuBC,kBAAvB,CAA2CC,oBAA3C,KAAuE,YAAvE,C,6IAEA,cAAe,SAASC,CAAAA,MAAT,EAAkB,CAC/B,GAAMC,CAAAA,UAAU,CAAG,qCAAnB,CAEA,cAAsCR,QAAQ,CAAC,EAAD,CAA9C,wCAAIS,UAAJ,eAAgBC,kBAAhB,eACA,gBAA0BR,UAAU,CAACE,YAAD,CAApC,CAAOO,eAAP,aAAOA,eAAP,CACA,iBAAyBT,UAAU,CAACG,kBAAD,CAAnC,CAAOO,cAAP,cAAOA,cAAP,CACA,iBAAgCV,UAAU,CAACI,oBAAD,CAA1C,CAAOO,qBAAP,cAAOA,qBAAP,CACAA,qBAAqB,CAAC,EAAD,CAArB,CACAD,cAAc,CAAC,OAAD,CAAd,CAEAX,SAAS,CAAE,UAAM,CACbS,kBAAkB,CAACC,eAAD,CAAlB,CACC,CAFI,CAEF,CAACA,eAAD,CAFE,CAAT,CAIAF,UAAU,CAACK,MAAX,CAAkB,EAAlB,EAEF,GAAMC,CAAAA,eAAe,CAAGN,UAAU,CAACO,GAAX,CAAe,SAAAC,KAAK,qBAC1C,sCACE,YAAK,SAAS,CAAG,sBAAjB,uBACE,MAAC,IAAD,EAAM,EAAE,CAAI,CAACC,QAAQ,kBAAYD,KAAK,CAACE,KAAlB,CAAT,CAAZ,wBACE,YAAK,SAAS,CAAG,aAAjB,uBACE,YAAK,GAAG,CAAIX,UAAU,CAAGS,KAAK,CAACG,WAA/B,CAA4C,GAAG,CAAIH,KAAK,CAACE,KAAzD,EADF,EADF,cAIE,YAAK,SAAS,CAAG,YAAjB,uBACE,mBAAIF,KAAK,CAACE,KAAV,EADF,EAJF,GADF,EADF,EAD0C,EAApB,CAAxB,CAaE,mBACE,YAAK,SAAS,CAAG,gBAAjB,UACIJ,eADJ,EADF,CAKD","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MovieContext, LocationURLContext, showSearchBarContext } from '../Context';\r\n\r\nexport default function Movies() {\r\n  const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n  \r\n  var[moviesList, setMoviesListState] = useState([]);\r\n  const {globalMovieList} = useContext(MovieContext);\r\n  const {setLocationURL} = useContext(LocationURLContext);\r\n  const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n  setShowSearchBarState(\"\");\r\n  setLocationURL(\"movie\");\r\n\r\n  useEffect( () => {  \r\n      setMoviesListState(globalMovieList);\r\n      }, [globalMovieList]);\r\n      \r\n  moviesList.splice(10);\r\n\r\nconst mapMoviesToPage = moviesList.map(movie => \r\n  <> \r\n    <div className = \"singleMovieContainer\">   \r\n      <Link to = {{pathname: `movies/${movie.title}`}}>\r\n        <div className = \"moviePoster\">  \r\n          <img src = {url_poster + movie.poster_path} alt = {movie.title} />\r\n        </div>\r\n        <div className = \"movieTitle\">\r\n          <p>{movie.title}</p> \r\n        </div> \r\n      </Link>\r\n    </div>  \r\n  </>)\r\n  return (\r\n    <div className = \"movieContainer\">\r\n      { mapMoviesToPage }\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}