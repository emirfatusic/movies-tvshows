{"version":3,"sources":["Context.js","Components/Search.js","Components/Header.js","Pages/Movies.js","Pages/TV.js","Pages/MovieDetails.js","Pages/TVDetails.js","App.js","reportWebVitals.js","index.js"],"names":["MovieContext","createContext","TVContext","LocationURLContext","onPageLoadMoviesContext","onPageLoadTVContext","showSearchBarContext","Search","url","locationURL","useContext","setGlobalMovieList","setGlobalTVList","movieListOnPageLoad","TVListOnPageLoad","showSearchBar","useState","searchQuery","setSearchQueryState","searchPlaceholderText","useEffect","length","delay","setTimeout","axios","get","then","response","movieList","data","results","clearTimeout","classList","style","display","id","type","className","placeholder","onChange","event","target","value","Header","focusOnTVShowsButton","useRef","current","focus","to","ref","Movies","moviesList","setMoviesListState","globalMovieList","setLocationURL","setShowSearchBarState","splice","mapMoviesToPage","map","movie","pathname","title","src","poster_path","alt","TV","TVList","setTVListState","globalTVList","name","MovieDetails","location","useLocation","movieToDisplay","youTubeKey","videoURL","setVideoURL","hasTrailer","forEach","element","urlRequestTrailerInfo","trailerInfo","key","onClick","useHistory","goBack","controls","overview","TVDetails","App","setmovieLIstOnPageLoad","setTVListOnPageLoad","resp","tvList","Provider","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8fcdc93.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const MovieContext = createContext({});\r\nexport const TVContext = createContext({});\r\nexport const LocationURLContext = createContext();\r\nexport const onPageLoadMoviesContext = createContext({});\r\nexport const onPageLoadTVContext = createContext({});\r\nexport const showSearchBarContext = createContext({});","import React, { useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { MovieContext, TVContext, LocationURLContext, onPageLoadMoviesContext, onPageLoadTVContext, showSearchBarContext } from '../Context';\r\n\r\nfunction Search() {\r\n    const url_movies = \"https://api.themoviedb.org/3/search/movie?api_key=ea51221982d56a556eae4bf95cbfc41d&query=\";\r\n    const url_tvshows = \"https://api.themoviedb.org/3/search/tv?api_key=ea51221982d56a556eae4bf95cbfc41d&query=\";\r\n    \r\n    const {locationURL} = useContext(LocationURLContext);\r\n    const {setGlobalMovieList} = useContext(MovieContext);\r\n    const {setGlobalTVList} = useContext(TVContext);\r\n    const {movieListOnPageLoad} = useContext(onPageLoadMoviesContext);\r\n    const {TVListOnPageLoad} = useContext(onPageLoadTVContext);\r\n    const {showSearchBar} = useContext(showSearchBarContext);\r\n\r\n    const [searchQuery, setSearchQueryState] = useState(\"\");\r\n\r\n    var url;\r\n    var searchPlaceholderText = \"\";\r\n    if (locationURL === \"movie\") {\r\n        url = url_movies;\r\n        searchPlaceholderText = \"search for movies...\";\r\n    }\r\n    else {\r\n        url = url_tvshows;\r\n        searchPlaceholderText = \"search for TV shows...\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(searchQuery.length >= 3){\r\n                const delay = setTimeout ( () => {\r\n                axios.get(url + searchQuery).then(response => {\r\n                    const movieList = response.data.results;\r\n                    if (locationURL === \"movie\") {\r\n                    setGlobalMovieList(movieList);\r\n                    }\r\n                    else {\r\n                    setGlobalTVList(movieList);\r\n                    }\r\n                })\r\n                }, 1000);\r\n            return() => clearTimeout(delay);\r\n        }\r\n        else{\r\n                setGlobalMovieList(movieListOnPageLoad);\r\n                setGlobalTVList(TVListOnPageLoad);\r\n        }\r\n    // Attributes in the array below define when the search should be triggered\r\n    // The second argument defines that the search should be triggered whenever user switches between\r\n    // \"Movies\" and \"TV Shows\" tabs.\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[searchQuery, locationURL]);\r\n    \r\n    return (\r\n        <div classList = \"searchWrap \"style={{display: showSearchBar}}>\r\n        <div id = \"search_bar_container\">\r\n            <input type = \"text\" \r\n             className = \"search_bar\" \r\n             placeholder = {searchPlaceholderText} \r\n             onChange = {(event) => {\r\n                    setSearchQueryState(event.target.value);\r\n            }\r\n            }>\r\n            </input>   \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n// import {MovieContext, TVContext, onPageLoadMoviesContext, onPageLoadTVContext} from '../Context';\r\n\r\nexport default function Header() {\r\n  const focusOnTVShowsButton = useRef(null);\r\n\r\n  useEffect( () => {\r\n    focusOnTVShowsButton.current.focus();\r\n  }, []);\r\n\r\n    return (\r\n        <div className = \"navbar\">\r\n        <header>\r\n          \r\n          <Link to = \"/movies\"> \r\n            <button id = \"moviesbtn\"  className = \"button2 b-orange rot-135\"\r\n            > Movies</button> \r\n          </Link>\r\n\r\n          <Link to = \"/tv\">\r\n            <button id = \"tvbtn\" className = \"button2 b-red rot-135\"\r\n            ref = {focusOnTVShowsButton}\r\n            >TV Shows</button> \r\n          </Link>\r\n        </header>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MovieContext, LocationURLContext, showSearchBarContext } from '../Context';\r\n\r\nexport default function Movies() {\r\n  const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n  \r\n  var[moviesList, setMoviesListState] = useState([]);\r\n  const {globalMovieList} = useContext(MovieContext);\r\n  const {setLocationURL} = useContext(LocationURLContext);\r\n  const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n  setShowSearchBarState(\"\");\r\n  setLocationURL(\"movie\");\r\n\r\n  useEffect( () => {  \r\n      setMoviesListState(globalMovieList);\r\n      }, [globalMovieList]);\r\n      \r\n  moviesList.splice(10);\r\n\r\nconst mapMoviesToPage = moviesList.map(movie => \r\n  <> \r\n    <div className = \"singleMovieContainer\">   \r\n      <Link to = {{pathname: `movies/${movie.title}`}}>\r\n        <div className = \"moviePoster\">  \r\n          <img src = {url_poster + movie.poster_path} alt = {movie.title} />\r\n        </div>\r\n        <div className = \"movieTitle\">\r\n          <p>{movie.title}</p> \r\n        </div> \r\n      </Link>\r\n    </div>  \r\n  </>)\r\n  return (\r\n    <div className = \"movieContainer\">\r\n      { mapMoviesToPage }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TVContext, LocationURLContext, showSearchBarContext } from '../Context';\r\n\r\nexport default function TV() { \r\n  const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n  \r\n  var[TVList, setTVListState] = useState([]);\r\n  const{globalTVList} = useContext(TVContext);\r\n  const{setLocationURL} = useContext(LocationURLContext);\r\n  const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n  setShowSearchBarState(\"\");\r\n\r\n  setLocationURL(\"tv\");\r\n  \r\n  useEffect( () => {\r\n      setTVListState(globalTVList);\r\n      }, [globalTVList])\r\n  \r\n  TVList.splice(10);\r\n\r\nconst mapMoviesToPage = TVList.map(movie => \r\n  <> \r\n    <div className = \"singleMovieContainer\">   \r\n      <Link to = {{pathname: `TV/${movie.name}`}}>\r\n        <div className = \"moviePoster\">  \r\n          <img src = {url_poster + movie.poster_path} alt = {movie.name} />\r\n        </div>\r\n        <div className = \"movieTitle\">\r\n          <p>{movie.name}</p> \r\n        </div> \r\n      </Link>\r\n    </div>  \r\n  </>)\r\n  return (\r\n    <div className = \"movieContainer\">\r\n      { mapMoviesToPage }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useRef, useState } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { LocationURLContext, MovieContext, showSearchBarContext } from '../Context';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport default function MovieDetails() {\r\n    \r\n    const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n    const location = useLocation();\r\n    const {globalMovieList} = useContext(MovieContext);\r\n    const {setLocationURL} = useContext(LocationURLContext);\r\n    const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n    setShowSearchBarState(\"none\");\r\n\r\n    setLocationURL(\"movie\");\r\n    const [videoURL, setVideoURL] = useState(\"\");\r\n\r\n    \r\n    let movieToDisplay;\r\n    let youTubeKey;\r\n    var hasTrailer = useRef(false);\r\n\r\n    globalMovieList.forEach(element => {\r\n        if(`/movies/${element.title}` === location.pathname){\r\n            movieToDisplay = element;\r\n        }\r\n    });\r\n    \r\n        let urlRequestTrailerInfo = `https://api.themoviedb.org/3/movie/${movieToDisplay.id}/videos?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US`;\r\n        \r\n        axios.get(urlRequestTrailerInfo).then((response)=>{\r\n            const trailerInfo = response.data.results;\r\n            if (trailerInfo.length === 0){\r\n                hasTrailer.current = false;\r\n            }\r\n            else {\r\n                hasTrailer.current = true;\r\n                youTubeKey = trailerInfo[0].key;\r\n                setVideoURL(\"https://www.youtube.com/watch?v=\" + youTubeKey);\r\n            }\r\n        })\r\n\r\n    return (\r\n        <>   \r\n        <div className = \"movieDetailedView\">\r\n        <div>\r\n            <button className = \"button2 backButton\" onClick ={useHistory().goBack}> &#60; Back</button>\r\n        </div> \r\n                <div className = \"detailedViewPoster\">\r\n                    { !hasTrailer.current &&\r\n                    <img src = {url_poster + movieToDisplay.poster_path} alt = {movieToDisplay.title}/>}\r\n                </div>\r\n                <div className = \"detailedViewTrailer\">\r\n                { hasTrailer.current && \r\n                <ReactPlayer url = {videoURL} controls = {true}/>}\r\n                </div>\r\n                <div className = \"detailedViewMovieTitle\">\r\n                    <p>{movieToDisplay.title}</p> \r\n                </div>\r\n                <div className = \"movieDescription\">\r\n                    <p>{movieToDisplay.overview}</p>\r\n                </div>   \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { TVContext, LocationURLContext, showSearchBarContext } from '../Context';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReactPlayer from 'react-player';\r\nimport axios from 'axios';\r\n\r\nexport default function TVDetails() {\r\n    const url_poster = \"https://image.tmdb.org/t/p/original\";\r\n    const location = useLocation();\r\n    const {globalTVList} = useContext(TVContext);\r\n    const {setLocationURL} = useContext(LocationURLContext);\r\n    const {setShowSearchBarState} = useContext(showSearchBarContext);\r\n    setShowSearchBarState(\"none\");\r\n\r\n    setLocationURL(\"tv\");\r\n    const [videoURL, setVideoURL] = useState(\"\");\r\n\r\n    let movieToDisplay;\r\n    let youTubeKey;\r\n    var hasTrailer = useRef(false);\r\n\r\n    globalTVList.forEach(element => {\r\n        if(`/TV/${element.name}` === location.pathname){\r\n            movieToDisplay = element;\r\n        }\r\n    });\r\n\r\n        let urlRequestTrailerInfo = `https://api.themoviedb.org/3/tv/${movieToDisplay.id}/videos?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US`;\r\n        \r\n        axios.get(urlRequestTrailerInfo).then((response)=>{\r\n            const trailerInfo = response.data.results;\r\n            if (trailerInfo.length === 0){\r\n                hasTrailer.current = false;\r\n            }\r\n            else {\r\n                hasTrailer.current = true;\r\n                youTubeKey = trailerInfo[0].key;\r\n                setVideoURL(\"https://www.youtube.com/watch?v=\" + youTubeKey);\r\n            }\r\n        })\r\n\r\n    return (\r\n        <>\r\n        <div className = \"movieDetailedView\">\r\n        <div>\r\n            <button className = \"button2 backButton\" onClick ={useHistory().goBack}> &#60; Back</button>\r\n        </div> \r\n                <div className = \"detailedViewPoster\">\r\n                    { !hasTrailer.current &&\r\n                    <img src = {url_poster + movieToDisplay.poster_path} alt = {movieToDisplay.name}/>}\r\n                </div>\r\n                <div className = \"detailedViewTrailer\">\r\n                { hasTrailer.current && \r\n                <ReactPlayer url = {videoURL} controls = {true}/>}\r\n                </div>\r\n                <div className = \"detailedViewMovieTitle\">\r\n                    <p>{movieToDisplay.name}</p> \r\n                </div>\r\n                <div className = \"movieDescription\">\r\n                    <p>{movieToDisplay.overview}</p>\r\n                </div>   \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Search from './Components/Search';\nimport Header from './Components/Header';\nimport Movies from './Pages/Movies';\nimport TV from './Pages/TV';\nimport MovieDetails from './Pages/MovieDetails';\nimport TVDetails from './Pages/TVDetails';\nimport { MovieContext, TVContext, LocationURLContext,onPageLoadMoviesContext, onPageLoadTVContext, showSearchBarContext } from './Context';\nimport axios from 'axios';\n\nfunction App() {  \nconst url_top10movies = \"https://api.themoviedb.org/3/movie/top_rated?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US&page=1\";\nconst url_top10tv = \"https://api.themoviedb.org/3/tv/top_rated?api_key=ea51221982d56a556eae4bf95cbfc41d&language=en-US&page=1\";   \n\nconst [globalMovieList, setGlobalMovieList] = useState([]);\nconst [globalTVList, setGlobalTVList] = useState([]);\nconst [locationURL, setLocationURL] = useState(\"\");\n//state below is used to store retrieved top 10 movies and tv data on page load to reduce number of api calls\nconst [movieListOnPageLoad, setmovieLIstOnPageLoad] = useState([]);\nconst [TVListOnPageLoad, setTVListOnPageLoad] = useState([]);\nconst [showSearchBar, setShowSearchBarState] = useState(\"\");\n\n\nuseEffect( () => {  \n  axios.get(url_top10movies).then(resp => {\n    const movieList = resp.data.results;\n    setGlobalMovieList(movieList);\n    setmovieLIstOnPageLoad(movieList);\n  })\n\n  axios.get(url_top10tv).then(resp => {\n    const tvList = resp.data.results;\n    setGlobalTVList(tvList);\n    setTVListOnPageLoad(tvList);\n  })\n}, []);\n\n  return(\n    <>\n    <Router>\n    <MovieContext.Provider value={{globalMovieList, setGlobalMovieList}}>\n    <TVContext.Provider value={{globalTVList, setGlobalTVList}}>\n    <LocationURLContext.Provider value={{locationURL, setLocationURL}}>\n    <onPageLoadMoviesContext.Provider value={{movieListOnPageLoad}}>\n    <onPageLoadTVContext.Provider value={{TVListOnPageLoad}}>\n    <showSearchBarContext.Provider value={{showSearchBar, setShowSearchBarState}}>\n    <Header/>\n    <Search/>\n      <Switch>\n        <Route path = \"/\" exact component = {TV}/>\n        <Route path = \"/tv\" exact component = {TV}/>\n        <Route path = \"/movies/*\" exact component = {MovieDetails}/>\n        <Route path = \"/TV/*\" exact component = {TVDetails}/>\n        <Route path = \"/movies\" exact component = {Movies}/>\n      </Switch>\n    </showSearchBarContext.Provider>\n    </onPageLoadTVContext.Provider>\n    </onPageLoadMoviesContext.Provider>\n    </LocationURLContext.Provider>\n    </TVContext.Provider> \n    </MovieContext.Provider>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}